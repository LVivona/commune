# MODULE ROUTES YAML

# this maps the routes to the functions in the module so that anyone can call them from the module base class 
# or from the command line.
# for instance, instead of calling `c subspace:query` you can call `c query` from the module base class or from the
# Entry types
# 1. str: a string that is the name of a function in the module
# 2. dict(from: str, to: str): a dictionary that maps a function name to another function name in the module
# - 1 to 1 mapping: {from: 'foo', to: 'bar'} maps the function 'foo' to 'bar'
# - 1 to many mapping: {from: 'foo', to: ['bar', 'baz']} maps the function 'foo' to 'bar' and 'baz'
# 3. list: a list of function names in the module (length == 2 only)
# - 1 to 1 mapping: ['foo', 'bar'] maps the function 'foo' to 'bar'
# - 1 to many mapping: ['foo', ['bar', 'baz']] maps the function 'foo' to 'bar' and 'baz'
vali: [
            run_epoch,
        ]
tree: [
            tree, 
            trees, 
            local_tree, 
            build_tree, 
            tree2path, 
            trees,
            add_tree, 
            rm_tree, 
            tree2path,
            path2simple, 
            simple2path,
            path2objectpath, 
            tree_paths, 
            tree_names
            ]
cli: [
            parse_args,
        ]
streamlit: [
            set_page_config,
        ]
docker: [
            containers,
        ]
client: [
            call, 
            call_search, 
            connect
        ]
repo: [
            is_repo,
        ]
key: [
            ss58_encode, 
            ss58_decode,
            key2mem, 
            key_info_map, 
            key_info,
            valid_ss58_address,
            add_key,
            from_password,
            str2key, 
            pwd2key,
            getmem,
            mem,
            mems,
            switch_key,
            module_info,
            rename_kefy, 
            mv_key,
            add_key,
            add_keys,
            key_exists,
            ls_keys,
            rm_key,
            key_encrypted,
            encrypt_key,
            staked,
            encrypt_key,   
            get_keys, 
            rm_keys,
            key2address,
            key_addresses,
            is_key,
            new_key,
            save_keys,
            load_key,
            load_keys, 
            get_signer ]
remote: [ host2ssh ]

subspace: [ subnet_params, 
                    query, 
                    my_subnets, 
                    global_params, 
                    subnet_names,
                    update_subnet, 
                    get_balances,
                    get_balance,
                    my_subnets,
                    balances,
                    balance,
                    global_params,
                    register, 
                    key_stats,
                    key2stats,
                    my_keys,
                    node_keys,
                    add_node,
                    add_node_key,
                    snap,
                    save,
                    key2balances,
                    key2balance,
                    key2value, 
                    key2stake,
                    live_keys,
                    seconds_per_epoch
                    is_registered,
                    transfer_multiple,
                    stake_transfer,
                    subnet2netuid,
                    netuid2subnet,
                    subnets,
                    subnet,
                    netuids,
                    unregistered_servers,
                    query_map,
                    key2tokens,
                    key2stake,
                    update_network, 
                    update_global,
                    my_subnets, 
                    register_servers,
                    registered_servers,
                    n, 
                    stats,
                    vstats, 
                    valis,
                    check_valis,
                    check_servers,
                    kill_nodes,
                    lag,
                    transfer,
                    staked, 
                    add_profit_shares,
                    profit_shares, 
                    block,
                    total_supply,
                    update_module,
                    update_modules,
                    set_weights,
                    stake,
                    total_supply, 
                    my_stake_from,
                    my_stake_to,
                    stake_many,
                    transfer_many, 
                    module_info, minfo,
                    send ]
namespace: [
            add_remote, 
            networks, 
            network2namespace, 
            register_server,
            deregister_server,
            server_exists, 
            add_server,
            has_server,
            add_servers, 
            rm_servers,
            rm_server,
            remote_servers,
            namespace, 
            rm_namespace,
            empty_namespace,
            add_namespace,
            update_namespace,
            build_namespace,
            put_namespace,
            get_namespace,
            server2info, 
            infos, 
            get_address, 
            servers,
            name2address
        ]

app : [
  'start_app', 
  'app', 
  'apps',
  'app2info',
]

user: 
  - role2users
  - is_user
  - get_user
  - update_user
  - get_role
  - refresh_users
  - user_exists
  - is_admin
  - admins
  - add_admin
  - rm_admin
  - num_roles
  - rm_user

ticket: [
  'ticket',
  'ticket2dict',
  'verify_ticket'
  ]

streamlit:
  - load_style
  - st_load_css

docker:
  - dlogs
  - images

network:
  - port_used
  - port_free
  - ports
  - kill_port_range
  - kill_port
  - free_port
  - get_port_range
  - set_port_range
  - free_ports
  - free_port

os: 
  - cmd
  - sys_path
  - get_pid
  - kill_pid
  - memory_info

code: 
  - determine_type
  - process_kwargs
  - python2str
  - str2python
  - bytes2str
  - str2bytes
  - str2python
  - python2str
  - is_generator
  - dict2munch
  - munch2dict
  - dict2json
  - json2dict

server: [
  serve
]

namespace:
  - namespace
  - get_address
  - servers